import { Agent } from '../../..'
import { getInMemoryAgentOptions } from '../../../../tests'
import { Mdoc } from '../Mdoc'

import { sprindFunkeX509TrustedCertificate, sprindFunkeTestVectorBase64Url } from './mdoc.fixtures'

const agent = new Agent(getInMemoryAgentOptions('mdoc-test-agent', {}))

describe('mdoc service test', () => {
  test('can get issuer-auth protected-header alg', async () => {
    const mdoc = Mdoc.fromIssuerSignedBase64Url(sprindFunkeTestVectorBase64Url)
    expect(mdoc.jwaSignatureAlgorithm).toBe('ES256')
  })

  test('can decode claims from namespaces', async () => {
    const mdoc = Mdoc.fromIssuerSignedBase64Url(sprindFunkeTestVectorBase64Url)
    const namespaces = mdoc.namespaces
    expect(Object.entries(namespaces)).toHaveLength(1)

    expect(namespaces).toBeDefined()
    const eudiPidNamespace = namespaces['eu.europa.ec.eudi.pid.1']
    expect(eudiPidNamespace).toBeDefined()
    //expect(Object.keys(eudiPidNamespace)).toHaveLength(22)
    //expect(eudiPidNamespace['family_name']).toEqual('MUSTERMANN')
  })

  test('can verify mdl.me Issuer Signed structure', async () => {
    //const decodedJson = decode(
    //TypedArrayEncoder.fromHex(
    //'b900036776657273696f6e63312e3069646f63756d656e747381b9000367646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c6973737565725369676e6564b900026a6e616d65537061636573b90001716f72672e69736f2e31383031332e352e318cd8185867b90004686469676573744944006672616e646f6d5820e489ebe4d99b1edbaabae79bd495eff428c7fdd20a75ddb1eef50e89cbe8abea71656c656d656e744964656e7469666965726b66616d696c795f6e616d656c656c656d656e7456616c756565536d697468d8185865b90004686469676573744944016672616e646f6d5820e0ee8716f75224b2e390c1af93814a6b2e64a4297bea2e0fe0fe27215e0642bd71656c656d656e744964656e7469666965726a676976656e5f6e616d656c656c656d656e7456616c7565644a6f686ed818586eb90004686469676573744944026672616e646f6d5820765c155e4a2e3f5e26aca6dc2af1059e762ca71d9fea700622b1a0cd9f4a5f7771656c656d656e744964656e7469666965726a62697274685f646174656c656c656d656e7456616c7565d903ec6a313938302d30362d3135d818586eb90004686469676573744944036672616e646f6d5820736033cbe053f4d2b28a9e5d48a0299b821b38af7052e2c519ac9e33a5377c5d71656c656d656e744964656e7469666965726a69737375655f646174656c656c656d656e7456616c7565d903ec6a323032332d30332d3031d818586fb90004686469676573744944046672616e646f6d5820c12f1094c34862f43ba502b8094d36571ec0df4ebe7f6814b6ec074695161faa71656c656d656e744964656e7469666965726b6578706972795f646174656c656c656d656e7456616c7565d903ec6a323032382d30332d3331d8185868b90004686469676573744944056672616e646f6d58207f2860fc7e2673e7b41c23fda4ead48b4db8f510a1af5e6d65bca8ecda07ec2f71656c656d656e744964656e7469666965726f69737375696e675f636f756e7472796c656c656d656e7456616c7565625553d818586eb90004686469676573744944066672616e646f6d582054d91d9de971d05bd611a4b60d43d3d4b88eeb495bf9983febb1ba047967121771656c656d656e744964656e7469666965727169737375696e675f617574686f726974796c656c656d656e7456616c7565664e5920444d56d8185873b90004686469676573744944076672616e646f6d5820aee2dd131c8a000cd234ed842ce1b4cf13d5abd801278ff76b7cd35a4610850571656c656d656e744964656e7469666965727469737375696e675f6a7572697364696374696f6e6c656c656d656e7456616c7565684e657720596f726bd8185871b90004686469676573744944086672616e646f6d5820694798e9920715f2821ed477e08bec5884d8c73aa06ec59b083e62db81bce69671656c656d656e744964656e7469666965726f646f63756d656e745f6e756d6265726c656c656d656e7456616c75656b30312d3333332d37303730d8185863b90004686469676573744944096672616e646f6d58207f3e751dd77f62af8719abb1dd547a34dff4536ce5dc7a0dfbce5bea64b5dc2871656c656d656e744964656e74696669657268706f7274726169746c656c656d656e7456616c75656462737472d81858b1b900046864696765737449440a6672616e646f6d5820c974f2750b1108e3aa424e0f2f2d75862b4fe3905926c4ef38a9049830a794e671656c656d656e744964656e7469666965727264726976696e675f70726976696c656765736c656c656d656e7456616c756581b900037576656869636c655f63617465676f72795f636f646561436a69737375655f646174656a323032332d30332d30316b6578706972795f646174656a323032382d30332d3331d818587ab900046864696765737449440b6672616e646f6d5820732a551ca3a640f54225fb327f8b2be11ef5a6abc4e84b11a120abc27189425d71656c656d656e744964656e74696669657276756e5f64697374696e6775697368696e675f7369676e6c656c656d656e7456616c75656d7462642d75732e6e792e646d766a697373756572417574688443a10126a20442313118218159022e3082022a308201d0a003020102021457c6ccd308bde43eca3744f2a87138dabbb884e8300a06082a8648ce3d0403023053310b30090603550406130255533111300f06035504080c084e657720596f726b310f300d06035504070c06416c62616e79310f300d060355040a0c064e5920444d56310f300d060355040b0c064e5920444d56301e170d3233303931343134353531385a170d3333303931313134353531385a3053310b30090603550406130255533111300f06035504080c084e657720596f726b310f300d06035504070c06416c62616e79310f300d060355040a0c064e5920444d56310f300d060355040b0c064e5920444d563059301306072a8648ce3d020106082a8648ce3d03010703420004893c2d8347906dc6cd69b7f636af4bfd533f96184f0aadacd10830da4471dbdb60ac170d1cfc534fae2d9dcd488f7747fdf978d925ea31e9e9083c382ba9ed53a38181307f301d0603551d0e04160414ab6d2e03b91d492240338fbccadefd9333eaf6c7301f0603551d23041830168014ab6d2e03b91d492240338fbccadefd9333eaf6c7300f0603551d130101ff040530030101ff302c06096086480186f842010d041f161d4f70656e53534c2047656e657261746564204365727469666963617465300a06082a8648ce3d0403020348003045022009fd0cab97b03e78f64e74d7dcee88668c476a0afc5aa2cebffe07d3be772ea9022100da38abc98a080f49f24ffece1fffc8a6cdd5b2c0b5da8fc7b767ac3a95dcb83e590319d818590314b900066776657273696f6e63312e306f646967657374416c676f726974686d675348412d3235366c76616c756544696765737473b900026f6f72672e637573746f6d2e74657374a10058209a5d928fdfd31cd8856843d4eb7697d2562dcc47d428067e81700ea3ada7cac4716f72672e69736f2e31383031332e352e31ac0058205c204814d6d07f82254f9a168cec60aba73d0519a29f695da989bcbfc4678e7201582017cbff2ffef61cd276e0b76a9370d56e1c4aef284a79f5bc0a5d1faa5fd0148602582021e81173edf1ea33735093b33e486b6b2dc84b5735856ad022512eeda240a9fc035820c902c1d90f5583f223f353938c460c5fa11553ee77034e69e78c992e1a94bc06045820820caae12904ac2e1220b4b5def9732f46f3e7ecb74a047f853c98420377ea08055820e0ae15e29966cb09cbfe17bde19be10742cf268c3d232f049a198569571c4d7206582065240ccb8948c8a369d81365e7d55e2e5ef8a42f11a135d9532919600ab5f5d6075820820917290ab590c12c5183f250599c7b28610428a7fe02d5f7bfba5e0b7dd6ad0858205c2826bb301e3e984345679cd9de551627a8c9d8b8f3fd929f7e9b65139e46c2095820356abf222eff02e18792888c695a4d39180f8ae3af4e6abaea3c298312445c950a582079d4076a45e341ce9b2ef73a028c7e1d0de3bd41911fa5fc1e5a6f2225472d8c0b5820bb28a9c7003d5dadf82f56944636ff68ffd44686169f0afe597cea95d6bfd3d26d6465766963654b6579496e666fb90001696465766963654b6579a40102215820881879ca7a238b19bf0f4c1f8c00e9a2e19ba7a6f73eae92b851d4de1b508559225820a314b538039127b5cd50735f54519e33c134450545c5603ad9f263facc56d377200167646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c76616c6964697479496e666fb90003667369676e6564c074323032332d30392d32365431373a31313a31385a6976616c696446726f6dc074323032332d30392d32365431373a31313a31385a6a76616c6964556e74696cc074323037332d30392d32365431373a31313a31385a5840a93de9b2b72375033066c4f3a5eb135e6866ce425c4d7a9de334a2fff06fc79c324081824b3bcd471a32936a52ba4fa2e47666461841f26b027e88de41becb946c6465766963655369676e6564b900026a6e616d65537061636573d81843b900006a64657669636541757468b900016f6465766963655369676e61747572658443a10126a10442313158d4d81858d0847444657669636541757468656e7469636174696f6e83f6f68466313233343536782b437131616e506238765a55356a354330643768637362754a4c4270496177554a4944515269324562776234785c687474703a2f2f6c6f63616c686f73743a343030302f6170692f70726573656e746174696f6e5f726571756573742f64633839393964662d643665612d346338342d393938352d3337613862383161383265632f63616c6c6261636b6761626364656667756f72672e69736f2e31383031332e352e312e6d444cd81843b900005840c944b61ef99e49251a8660da564eb9188dc19530dec7dda6fe57aebf768257bea761fba4c9555f4d3d0d3832fc2a5a714818143858eaa9072b6592e78e52c7006673746174757300'
    //)
    //)
    //const issuerSigned = decodedJson.documents[0].issuerSigned

    //const base64UrlEncodedIssuerSignedStructured = TypedArrayEncoder.toBase64(encode(issuerSigned))
    const base64UrlEncodedIssuerSignedStructured =
      'uQACam5hbWVTcGFjZXO5AAFxb3JnLmlzby4xODAxMy41LjGM2BhYZ7kABGhkaWdlc3RJRABmcmFuZG9tWCDkievk2Zse26q655vUle/0KMf90gp13bHu9Q6Jy+ir6nFlbGVtZW50SWRlbnRpZmllcmtmYW1pbHlfbmFtZWxlbGVtZW50VmFsdWVlU21pdGjYGFhluQAEaGRpZ2VzdElEAWZyYW5kb21YIODuhxb3UiSy45DBr5OBSmsuZKQpe+ouD+D+JyFeBkK9cWVsZW1lbnRJZGVudGlmaWVyamdpdmVuX25hbWVsZWxlbWVudFZhbHVlZEpvaG7YGFhuuQAEaGRpZ2VzdElEAmZyYW5kb21YIHZcFV5KLj9eJqym3CrxBZ52LKcdn+pwBiKxoM2fSl93cWVsZW1lbnRJZGVudGlmaWVyamJpcnRoX2RhdGVsZWxlbWVudFZhbHVl2QPsajE5ODAtMDYtMTXYGFhuuQAEaGRpZ2VzdElEA2ZyYW5kb21YIHNgM8vgU/TSsoqeXUigKZuCGzivcFLixRmsnjOlN3xdcWVsZW1lbnRJZGVudGlmaWVyamlzc3VlX2RhdGVsZWxlbWVudFZhbHVl2QPsajIwMjMtMDMtMDHYGFhvuQAEaGRpZ2VzdElEBGZyYW5kb21YIMEvEJTDSGL0O6UCuAlNNlcewN9Ovn9oFLbsB0aVFh+qcWVsZW1lbnRJZGVudGlmaWVya2V4cGlyeV9kYXRlbGVsZW1lbnRWYWx1ZdkD7GoyMDI4LTAzLTMx2BhYaLkABGhkaWdlc3RJRAVmcmFuZG9tWCB/KGD8fiZz57QcI/2k6tSLTbj1EKGvXm1lvKjs2gfsL3FlbGVtZW50SWRlbnRpZmllcm9pc3N1aW5nX2NvdW50cnlsZWxlbWVudFZhbHVlYlVT2BhYbrkABGhkaWdlc3RJRAZmcmFuZG9tWCBU2R2d6XHQW9YRpLYNQ9PUuI7rSVv5mD/rsboEeWcSF3FlbGVtZW50SWRlbnRpZmllcnFpc3N1aW5nX2F1dGhvcml0eWxlbGVtZW50VmFsdWVmTlkgRE1W2BhYc7kABGhkaWdlc3RJRAdmcmFuZG9tWCCu4t0THIoADNI07YQs4bTPE9Wr2AEnj/drfNNaRhCFBXFlbGVtZW50SWRlbnRpZmllcnRpc3N1aW5nX2p1cmlzZGljdGlvbmxlbGVtZW50VmFsdWVoTmV3IFlvcmvYGFhxuQAEaGRpZ2VzdElECGZyYW5kb21YIGlHmOmSBxXygh7Ud+CL7FiE2Mc6oG7Fmwg+YtuBvOaWcWVsZW1lbnRJZGVudGlmaWVyb2RvY3VtZW50X251bWJlcmxlbGVtZW50VmFsdWVrMDEtMzMzLTcwNzDYGFhjuQAEaGRpZ2VzdElECWZyYW5kb21YIH8+dR3Xf2Kvhxmrsd1UejTf9FNs5dx6DfvOW+pktdwocWVsZW1lbnRJZGVudGlmaWVyaHBvcnRyYWl0bGVsZW1lbnRWYWx1ZWRic3Ry2BhYsbkABGhkaWdlc3RJRApmcmFuZG9tWCDJdPJ1CxEI46pCTg8vLXWGK0/jkFkmxO84qQSYMKeU5nFlbGVtZW50SWRlbnRpZmllcnJkcml2aW5nX3ByaXZpbGVnZXNsZWxlbWVudFZhbHVlgbkAA3V2ZWhpY2xlX2NhdGVnb3J5X2NvZGVhQ2ppc3N1ZV9kYXRlajIwMjMtMDMtMDFrZXhwaXJ5X2RhdGVqMjAyOC0wMy0zMdgYWHq5AARoZGlnZXN0SUQLZnJhbmRvbVggcypVHKOmQPVCJfsyf4sr4R71pqvE6EsRoSCrwnGJQl1xZWxlbWVudElkZW50aWZpZXJ2dW5fZGlzdGluZ3Vpc2hpbmdfc2lnbmxlbGVtZW50VmFsdWVtdGJkLXVzLm55LmRtdmppc3N1ZXJBdXRohEOhASa5AAJhNEIxMWIzM4FZAi4wggIqMIIB0KADAgECAhRXxszTCL3kPso3RPKocTjau7iE6DAKBggqhkjOPQQDAjBTMQswCQYDVQQGEwJVUzERMA8GA1UECAwITmV3IFlvcmsxDzANBgNVBAcMBkFsYmFueTEPMA0GA1UECgwGTlkgRE1WMQ8wDQYDVQQLDAZOWSBETVYwHhcNMjMwOTE0MTQ1NTE4WhcNMzMwOTExMTQ1NTE4WjBTMQswCQYDVQQGEwJVUzERMA8GA1UECAwITmV3IFlvcmsxDzANBgNVBAcMBkFsYmFueTEPMA0GA1UECgwGTlkgRE1WMQ8wDQYDVQQLDAZOWSBETVYwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASJPC2DR5Btxs1pt/Y2r0v9Uz+WGE8KrazRCDDaRHHb22CsFw0c/FNPri2dzUiPd0f9+XjZJeox6ekIPDgrqe1To4GBMH8wHQYDVR0OBBYEFKttLgO5HUkiQDOPvMre/ZMz6vbHMB8GA1UdIwQYMBaAFKttLgO5HUkiQDOPvMre/ZMz6vbHMA8GA1UdEwEB/wQFMAMBAf8wLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRlMAoGCCqGSM49BAMCA0gAMEUCIAn9DKuXsD549k5019zuiGaMR2oK/Fqizr/+B9O+dy6pAiEA2jiryYoID0nyT/7OH//Ips3VssC12o/Ht2esOpXcuD5ZAxnYGFkDFLkABmd2ZXJzaW9uYzEuMG9kaWdlc3RBbGdvcml0aG1nU0hBLTI1Nmx2YWx1ZURpZ2VzdHO5AAJvb3JnLmN1c3RvbS50ZXN0oQBYIJpdko/f0xzYhWhD1Ot2l9JWLcxH1CgGfoFwDqOtp8rEcW9yZy5pc28uMTgwMTMuNS4xrABYIFwgSBTW0H+CJU+aFozsYKunPQUZop9pXamJvL/EZ45yAVggF8v/L/72HNJ24Ldqk3DVbhxK7yhKefW8Cl0fql/QFIYCWCAh6BFz7fHqM3NQk7M+SGtrLchLVzWFatAiUS7tokCp/ANYIMkCwdkPVYPyI/NTk4xGDF+hFVPudwNOaeeMmS4alLwGBFggggyq4SkErC4SILS13vlzL0bz5+y3SgR/hTyYQgN36ggFWCDgrhXimWbLCcv+F73hm+EHQs8mjD0jLwSaGYVpVxxNcgZYIGUkDMuJSMijadgTZefVXi5e+KQvEaE12VMpGWAKtfXWB1ggggkXKQq1kMEsUYPyUFmceyhhBCin/gLV97+6Xgt91q0IWCBcKCa7MB4+mENFZ5zZ3lUWJ6jJ2Ljz/ZKffptlE55GwglYIDVqvyIu/wLhh5KIjGlaTTkYD4rjr05quuo8KYMSRFyVClggedQHakXjQc6bLvc6Aox+HQ3jvUGRH6X8HlpvIiVHLYwLWCC7KKnHAD1drfgvVpRGNv9o/9RGhhafCv5ZfOqV1r/T0m1kZXZpY2VLZXlJbmZvuQABaWRldmljZUtleaQBAiFYIIgYecp6I4sZvw9MH4wA6aLhm6em9z6ukrhR1N4bUIVZIlggoxS1OAORJ7XNUHNfVFGeM8E0RQVFxWA62fJj+sxW03cgAWdkb2NUeXBldW9yZy5pc28uMTgwMTMuNS4xLm1ETGx2YWxpZGl0eUluZm+5AANmc2lnbmVkwHQyMDIzLTA5LTI2VDE3OjExOjE4Wml2YWxpZEZyb23AdDIwMjMtMDktMjZUMTc6MTE6MThaanZhbGlkVW50aWzAdDIwNzMtMDktMjZUMTc6MTE6MThaWECpPemytyN1AzBmxPOl6xNeaGbOQlxNep3jNKL/8G/HnDJAgYJLO81HGjKTalK6T6LkdmZGGEHyawJ+iN5BvsuU'

    const mdoc = Mdoc.fromIssuerSignedHex(base64UrlEncodedIssuerSignedStructured)

    const verify = await mdoc.verify(agent.context, {
      trustedCertificates: [sprindFunkeX509TrustedCertificate],
    })
    expect(verify.isValid).toBeTruthy()
  })

  test('can verify sprindFunkeTestVector Issuer Signed structure', async () => {
    const mdoc = Mdoc.fromIssuerSignedBase64Url(sprindFunkeTestVectorBase64Url)
    //const decoded = decode(TypedArrayEncoder.fromBase64(sprindFunkeTestVectorBase64Url))
    //const tryit = decoded.issuerAuth[2]
    //const decodeAgain = decode(tryit)
    //const decodeAgain2 = decode(decodeAgain.value)
    const verify = await mdoc.verify(agent.context, {
      trustedCertificates: [sprindFunkeX509TrustedCertificate],
    })
    expect(verify.isValid).toBeTruthy()
  })

  test('can verify issuer signed structure of official mdoc response test vector', async () => {
    //const originalMdocResponseTestVector =
    //'a36776657273696f6e63312e3069646f63756d656e747381a367646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c6973737565725369676e6564a26a6e616d65537061636573a1716f72672e69736f2e31383031332e352e3186d8185863a4686469676573744944006672616e646f6d58208798645b20ea200e19ffabac92624bee6aec63aceedecfb1b80077d22bfc20e971656c656d656e744964656e7469666965726b66616d696c795f6e616d656c656c656d656e7456616c756563446f65d818586ca4686469676573744944036672616e646f6d5820b23f627e8999c706df0c0a4ed98ad74af988af619b4bb078b89058553f44615d71656c656d656e744964656e7469666965726a69737375655f646174656c656c656d656e7456616c7565d903ec6a323031392d31302d3230d818586da4686469676573744944046672616e646f6d5820c7ffa307e5de921e67ba5878094787e8807ac8e7b5b3932d2ce80f00f3e9abaf71656c656d656e744964656e7469666965726b6578706972795f646174656c656c656d656e7456616c7565d903ec6a323032342d31302d3230d818586da4686469676573744944076672616e646f6d582026052a42e5880557a806c1459af3fb7eb505d3781566329d0b604b845b5f9e6871656c656d656e744964656e7469666965726f646f63756d656e745f6e756d6265726c656c656d656e7456616c756569313233343536373839d818590471a4686469676573744944086672616e646f6d5820d094dad764a2eb9deb5210e9d899643efbd1d069cc311d3295516ca0b024412d71656c656d656e744964656e74696669657268706f7274726169746c656c656d656e7456616c7565590412ffd8ffe000104a46494600010101009000900000ffdb004300130d0e110e0c13110f11151413171d301f1d1a1a1d3a2a2c2330453d4947443d43414c566d5d4c51685241435f82606871757b7c7b4a5c869085778f6d787b76ffdb0043011415151d191d381f1f38764f434f7676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676ffc00011080018006403012200021101031101ffc4001b00000301000301000000000000000000000005060401020307ffc400321000010303030205020309000000000000010203040005110612211331141551617122410781a1163542527391b2c1f1ffc4001501010100000000000000000000000000000001ffc4001a110101010003010000000000000000000000014111213161ffda000c03010002110311003f00a5bbde22da2329c7d692bc7d0d03f52cfb0ff75e7a7ef3e7709723a1d0dae146ddfbb3c039ce07ad2bd47a7e32dbb8dd1d52d6ef4b284f64a480067dfb51f87ffb95ff00eb9ff14d215de66af089ce44b7dbde9cb6890a2838eddf18078f7add62d411ef4db9b10a65d6b95a147381ea0d495b933275fe6bba75c114104a8ba410413e983dff004f5af5d34b4b4cde632d0bf1fd1592bdd91c6411f3934c2fa6af6b54975d106dcf4a65ae56e856001ebc03c7ce29dd9eef1ef10fc447dc9da76ad2aee93537a1ba7e4f70dd8eff0057c6dffb5e1a19854a83758e54528750946ec6704850cd037bceb08b6d7d2cc76d3317fc7b5cc04fb6707269c5c6e0c5b60ae549242123b0e493f602a075559e359970d98db89525456b51c951c8afa13ea8e98e3c596836783d5c63f5a61a99fdb7290875db4be88ab384bbbbbfc7183fdeaa633e8951db7da396dc48524fb1a8bd611a5aa2a2432f30ab420a7a6d3240c718cf031fa9ef4c9ad550205aa02951df4a1d6c8421b015b769db8c9229837ea2be8b1b0d39d0eba9c51484efdb8c0efd8d258daf3c449699f2edbd4584e7af9c64e3f96b9beb28d4ac40931e6478c8e76a24a825449501d867d2b1dcdebae99b9c752ae4ecd6dde4a179c1c1e460938f9149ef655e515c03919a289cb3dca278fb7bf177f4faa829dd8ce3f2ac9a7ecde490971fafd7dce15eed9b71c018c64fa514514b24e8e4f8c5c9b75c1e82579dc1233dfec08238f6add62d391acc1c5256a79e706d52d431c7a0145140b9fd149eb3a60dc5e88cbbc2da092411e9dc71f39a7766b447b344e847dcac9dcb5abba8d145061d43a6fcf1e65cf15d0e90231d3dd9cfe62995c6dcc5ca12a2c904a15f71dd27d451453e09d1a21450961cbb3ea8a956433b781f1ce33dfed54f0e2b50a2b71d84ed6db18028a28175f74fc6bda105c529a791c25c4f3c7a11f71586268f4a66b726e33de9ea6f1b52b181c760724e47b514520a5a28a283ffd9d81858ffa4686469676573744944096672616e646f6d58204599f81beaa2b20bd0ffcc9aa03a6f985befab3f6beaffa41e6354cdb2ab2ce471656c656d656e744964656e7469666965727264726976696e675f70726976696c656765736c656c656d656e7456616c756582a37576656869636c655f63617465676f72795f636f646561416a69737375655f64617465d903ec6a323031382d30382d30396b6578706972795f64617465d903ec6a323032342d31302d3230a37576656869636c655f63617465676f72795f636f646561426a69737375655f64617465d903ec6a323031372d30322d32336b6578706972795f64617465d903ec6a323032342d31302d32306a697373756572417574688443a10126a118215901f3308201ef30820195a00302010202143c4416eed784f3b413e48f56f075abfa6d87eb84300a06082a8648ce3d04030230233114301206035504030c0b75746f7069612069616361310b3009060355040613025553301e170d3230313030313030303030305a170d3231313030313030303030305a30213112301006035504030c0975746f706961206473310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d03010703420004ace7ab7340e5d9648c5a72a9a6f56745c7aad436a03a43efea77b5fa7b88f0197d57d8983e1b37d3a539f4d588365e38cbbf5b94d68c547b5bc8731dcd2f146ba381a83081a5301e0603551d120417301581136578616d706c65406578616d706c652e636f6d301c0603551d1f041530133011a00fa00d820b6578616d706c652e636f6d301d0603551d0e0416041414e29017a6c35621ffc7a686b7b72db06cd12351301f0603551d2304183016801454fa2383a04c28e0d930792261c80c4881d2c00b300e0603551d0f0101ff04040302078030150603551d250101ff040b3009060728818c5d050102300a06082a8648ce3d040302034800304502210097717ab9016740c8d7bcdaa494a62c053bbdecce1383c1aca72ad08dbc04cbb202203bad859c13a63c6d1ad67d814d43e2425caf90d422422c04a8ee0304c0d3a68d5903a2d81859039da66776657273696f6e63312e306f646967657374416c676f726974686d675348412d3235366c76616c756544696765737473a2716f72672e69736f2e31383031332e352e31ad00582075167333b47b6c2bfb86eccc1f438cf57af055371ac55e1e359e20f254adcebf01582067e539d6139ebd131aef441b445645dd831b2b375b390ca5ef6279b205ed45710258203394372ddb78053f36d5d869780e61eda313d44a392092ad8e0527a2fbfe55ae0358202e35ad3c4e514bb67b1a9db51ce74e4cb9b7146e41ac52dac9ce86b8613db555045820ea5c3304bb7c4a8dcb51c4c13b65264f845541341342093cca786e058fac2d59055820fae487f68b7a0e87a749774e56e9e1dc3a8ec7b77e490d21f0e1d3475661aa1d0658207d83e507ae77db815de4d803b88555d0511d894c897439f5774056416a1c7533075820f0549a145f1cf75cbeeffa881d4857dd438d627cf32174b1731c4c38e12ca936085820b68c8afcb2aaf7c581411d2877def155be2eb121a42bc9ba5b7312377e068f660958200b3587d1dd0c2a07a35bfb120d99a0abfb5df56865bb7fa15cc8b56a66df6e0c0a5820c98a170cf36e11abb724e98a75a5343dfa2b6ed3df2ecfbb8ef2ee55dd41c8810b5820b57dd036782f7b14c6a30faaaae6ccd5054ce88bdfa51a016ba75eda1edea9480c5820651f8736b18480fe252a03224ea087b5d10ca5485146c67c74ac4ec3112d4c3a746f72672e69736f2e31383031332e352e312e5553a4005820d80b83d25173c484c5640610ff1a31c949c1d934bf4cf7f18d5223b15dd4f21c0158204d80e1e2e4fb246d97895427ce7000bb59bb24c8cd003ecf94bf35bbd2917e340258208b331f3b685bca372e85351a25c9484ab7afcdf0d2233105511f778d98c2f544035820c343af1bd1690715439161aba73702c474abf992b20c9fb55c36a336ebe01a876d6465766963654b6579496e666fa1696465766963654b6579a40102200121582096313d6c63e24e3372742bfdb1a33ba2c897dcd68ab8c753e4fbd48dca6b7f9a2258201fb3269edd418857de1b39a4e4a44b92fa484caa722c228288f01d0c03a2c3d667646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c76616c6964697479496e666fa3667369676e6564c074323032302d31302d30315431333a33303a30325a6976616c696446726f6dc074323032302d31302d30315431333a33303a30325a6a76616c6964556e74696cc074323032312d31302d30315431333a33303a30325a584059e64205df1e2f708dd6db0847aed79fc7c0201d80fa55badcaf2e1bcf5902e1e5a62e4832044b890ad85aa53f129134775d733754d7cb7a413766aeff13cb2e6c6465766963655369676e6564a26a6e616d65537061636573d81841a06a64657669636541757468a1696465766963654d61638443a10105a0f65820e99521a85ad7891b806a07f8b5388a332d92c189a7bf293ee1f543405ae6824d6673746174757300'
    //const decoded = decode(TypedArrayEncoder.fromHex(originalMdocResponseTestVector))
    //const issuerSignedStructure = decoded.documents[0].issuerSigned
    //const base64EncodedIssuerSignedStructure = TypedArrayEncoder.toBase64(encode(issuerSignedStructure))
    //const base64EncodedIssuerSignedStructure =
    //  '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'
    const issuerSignedHex =
      '8443a10126a118215901f3308201ef30820195a00302010202143c4416eed784f3b413e48f56f075abfa6d87eb84300a06082a8648ce3d04030230233114301206035504030c0b75746f7069612069616361310b3009060355040613025553301e170d3230313030313030303030305a170d3231313030313030303030305a30213112301006035504030c0975746f706961206473310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d03010703420004ace7ab7340e5d9648c5a72a9a6f56745c7aad436a03a43efea77b5fa7b88f0197d57d8983e1b37d3a539f4d588365e38cbbf5b94d68c547b5bc8731dcd2f146ba381a83081a5301e0603551d120417301581136578616d706c65406578616d706c652e636f6d301c0603551d1f041530133011a00fa00d820b6578616d706c652e636f6d301d0603551d0e0416041414e29017a6c35621ffc7a686b7b72db06cd12351301f0603551d2304183016801454fa2383a04c28e0d930792261c80c4881d2c00b300e0603551d0f0101ff04040302078030150603551d250101ff040b3009060728818c5d050102300a06082a8648ce3d040302034800304502210097717ab9016740c8d7bcdaa494a62c053bbdecce1383c1aca72ad08dbc04cbb202203bad859c13a63c6d1ad67d814d43e2425caf90d422422c04a8ee0304c0d3a68d5903a2d81859039da66776657273696f6e63312e306f646967657374416c676f726974686d675348412d3235366c76616c756544696765737473a2716f72672e69736f2e31383031332e352e31ad00582075167333b47b6c2bfb86eccc1f438cf57af055371ac55e1e359e20f254adcebf01582067e539d6139ebd131aef441b445645dd831b2b375b390ca5ef6279b205ed45710258203394372ddb78053f36d5d869780e61eda313d44a392092ad8e0527a2fbfe55ae0358202e35ad3c4e514bb67b1a9db51ce74e4cb9b7146e41ac52dac9ce86b8613db555045820ea5c3304bb7c4a8dcb51c4c13b65264f845541341342093cca786e058fac2d59055820fae487f68b7a0e87a749774e56e9e1dc3a8ec7b77e490d21f0e1d3475661aa1d0658207d83e507ae77db815de4d803b88555d0511d894c897439f5774056416a1c7533075820f0549a145f1cf75cbeeffa881d4857dd438d627cf32174b1731c4c38e12ca936085820b68c8afcb2aaf7c581411d2877def155be2eb121a42bc9ba5b7312377e068f660958200b3587d1dd0c2a07a35bfb120d99a0abfb5df56865bb7fa15cc8b56a66df6e0c0a5820c98a170cf36e11abb724e98a75a5343dfa2b6ed3df2ecfbb8ef2ee55dd41c8810b5820b57dd036782f7b14c6a30faaaae6ccd5054ce88bdfa51a016ba75eda1edea9480c5820651f8736b18480fe252a03224ea087b5d10ca5485146c67c74ac4ec3112d4c3a746f72672e69736f2e31383031332e352e312e5553a4005820d80b83d25173c484c5640610ff1a31c949c1d934bf4cf7f18d5223b15dd4f21c0158204d80e1e2e4fb246d97895427ce7000bb59bb24c8cd003ecf94bf35bbd2917e340258208b331f3b685bca372e85351a25c9484ab7afcdf0d2233105511f778d98c2f544035820c343af1bd1690715439161aba73702c474abf992b20c9fb55c36a336ebe01a876d6465766963654b6579496e666fa1696465766963654b6579a40102200121582096313d6c63e24e3372742bfdb1a33ba2c897dcd68ab8c753e4fbd48dca6b7f9a2258201fb3269edd418857de1b39a4e4a44b92fa484caa722c228288f01d0c03a2c3d667646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c76616c6964697479496e666fa3667369676e6564c074323032302d31302d30315431333a33303a30325a6976616c696446726f6dc074323032302d31302d30315431333a33303a30325a6a76616c6964556e74696cc074323032312d31302d30315431333a33303a30325a584059e64205df1e2f708dd6db0847aed79fc7c0201d80fa55badcaf2e1bcf5902e1e5a62e4832044b890ad85aa53f129134775d733754d7cb7a413766aeff13cb2e'

    const mdoc = Mdoc.fromIssuerSignedHex(issuerSignedHex)
    const result = await mdoc.verify(agent.context, {
      trustedCertificates: [
        // TODO: MIGHT be the wrong certificate check that
        'MIICsTCCAligAwIBAgICEAEwCgYIKoZIzj0EAwIwTTELMAkGA1UEBhMCSlAxHjAcBgNVBAoMFVVUTVMgU09DSUVUWSBPRiBKQVBBTjEeMBwGA1UEAwwVVVRNUyBTT0NJRVRZIE9GIEpBUEFOMB4XDTE5MTAyOTEwMTQ1MVoXDTIwMTEwNzEwMTQ1MVowUTELMAkGA1UEBhMCSlAxHjAcBgNVBAoMFVVUTVMgU09DSUVUWSBPRiBKQVBBTjEiMCAGA1UEAwwZVVRNUyBTT0NJRVRZIE9GIEpBUEFOIEpXUzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABODEwPQJGm8aCfdmmVgkkvDOrWJQJ9q8bIz4tiBVBEeyLqes+PoWeJ9pxM/DDQ4jCRTOAG1HLxlvPmELZPdEpuujggEiMIIBHjAdBgNVHQ4EFgQURdBbg08Ic4P8vuUU/jonP+1lvMkwgYkGA1UdIwSBgTB/gBTlT6G63E2OMlXcnal9FmRPD7aX1aFRpE8wTTELMAkGA1UEBhMCSlAxHjAcBgNVBAoMFVVUTVMgU09DSUVUWSBPRiBKQVBBTjEeMBwGA1UEAwwVVVRNUyBTT0NJRVRZIE9GIEpBUEFOghQGY5mhvd+vby1Zll4cJLdXX3rz3zALBgNVHQ8EBAMCB4AwEgYDVR0lBAswCQYHKIGMXQUBAzAJBgNVHRMEAjAAMCMGA1UdHwQcMBowGKAWoBSGEmh0dHA6Ly8xMy43OC41Mi40NDAgBgNVHRIEGTAXhhVodHRwOi8vd3d3LnV0bXMub3IuanAwCgYIKoZIzj0EAwIDRwAwRAIgIJwzE1J2z2U/98apsz/V90IwuUgBCLDfZNwtpuKWPR4CICJt0DPbSTT48rpsdO9K1euMVeFn3pSouu3OgRo2hTUg',
      ],
    })

    expect(result).toMatchObject({ isValid: true })
  })
})
